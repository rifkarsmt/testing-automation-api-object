{
  "stats": {
    "suites": 6,
    "tests": 22,
    "passes": 7,
    "pending": 0,
    "failures": 15,
    "start": "2024-08-15T13:55:57.494Z",
    "end": "2024-08-15T13:56:02.518Z",
    "duration": 5024,
    "testsRegistered": 22,
    "passPercent": 31.818181818181817,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a9647576-7229-47be-bd40-326638fc4f8c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f8980229-6057-4110-b890-a5459ba6625f",
          "title": "Add Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\add-object-test.js",
          "file": "\\api\\test\\menu-object-test\\add-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "fullTitle": "Add Object @post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "timedOut": false,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16\",\n        \"data\": {\n           \"year\": 2019,\n           \"price\": 1849.99,\n           \"CPU model\": \"Intel Core i9\",\n           \"Hard disk size\": \"1 TB\"\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {},
              "uuid": "7f75f9ec-8b5d-4e51-a9ea-be6f9f90fc31",
              "parentUUID": "f8980229-6057-4110-b890-a5459ba6625f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "fullTitle": "Add Object @post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "timedOut": false,
              "duration": 155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"1234567\",\n        \"data\": {\n           \"year\": true,\n           \"price\": false,\n           \"CPU model\": \"!@#$%^\",\n           \"Hard disk size\": \"!@#$\",\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(400);\n}",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:53:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "b88d4c7f-38c5-4a8e-acb1-b820bda3dc11",
              "parentUUID": "f8980229-6057-4110-b890-a5459ba6625f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Add Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 215,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.postAddRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:62:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "92481480-3fce-4c83-8ce3-ab60642b7c76",
              "parentUUID": "f8980229-6057-4110-b890-a5459ba6625f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f75f9ec-8b5d-4e51-a9ea-be6f9f90fc31"
          ],
          "failures": [
            "b88d4c7f-38c5-4a8e-acb1-b820bda3dc11",
            "92481480-3fce-4c83-8ce3-ab60642b7c76"
          ],
          "pending": [],
          "skipped": [],
          "duration": 809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "fc73673b-c777-4a9a-8538-321d720852a7",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\get-list-object-test.js",
          "file": "\\api\\test\\menu-object-test\\get-list-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "924f10dd-5d27-4414-a0a8-c8f1f6351cab",
              "parentUUID": "fc73673b-c777-4a9a-8538-321d720852a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "4c9cb214-4933-4289-8cfe-4cc69d02f14d",
              "parentUUID": "fc73673b-c777-4a9a-8538-321d720852a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "List All Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\get-list-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "14f83000-1504-4b6a-91f4-87824a7c1815",
              "parentUUID": "fc73673b-c777-4a9a-8538-321d720852a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "924f10dd-5d27-4414-a0a8-c8f1f6351cab",
            "4c9cb214-4933-4289-8cfe-4cc69d02f14d"
          ],
          "failures": [
            "14f83000-1504-4b6a-91f4-87824a7c1815"
          ],
          "pending": [],
          "skipped": [],
          "duration": 876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "19de3619-ad2d-4a3d-ac66-5e838170d5aa",
          "title": "Partially Update Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\partially-update-object-test.js",
          "file": "\\api\\test\\menu-object-test\\partially-update-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@patch As a User, I want to be able to Update  Object - Testing with Update Object",
              "fullTitle": "Partially Update Object @patch As a User, I want to be able to Update  Object - Testing with Update Object",
              "timedOut": false,
              "duration": 606,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16 (Updated Name)\"\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.patchUpdateObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {
                "message": "AssertionError: expected 405 to equal 200",
                "estack": "AssertionError: expected 405 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\partially-update-object-test.js:27:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 200\n"
              },
              "uuid": "5cc10652-4ce0-4f54-bcd3-2a2744ca0357",
              "parentUUID": "19de3619-ad2d-4a3d-ac66-5e838170d5aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With Invalid Route",
              "fullTitle": "Partially Update Object @get As a User, I should get error 404 when Invalid Route - Testing With Invalid Route",
              "timedOut": false,
              "duration": 139,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.patchnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 400 to equal 404",
                "estack": "AssertionError: expected 400 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\partially-update-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 400\n+ 404\n"
              },
              "uuid": "e7ef9f57-4b6e-4c55-9698-5c3754c49c3d",
              "parentUUID": "19de3619-ad2d-4a3d-ac66-5e838170d5aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Partially Update Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 191,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.patchUpdateRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 405 to equal 408",
                "estack": "AssertionError: expected 405 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\partially-update-object-test.js:42:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 408\n"
              },
              "uuid": "c9f14f22-0932-4526-b78f-01397a650081",
              "parentUUID": "19de3619-ad2d-4a3d-ac66-5e838170d5aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5cc10652-4ce0-4f54-bcd3-2a2744ca0357",
            "e7ef9f57-4b6e-4c55-9698-5c3754c49c3d",
            "c9f14f22-0932-4526-b78f-01397a650081"
          ],
          "pending": [],
          "skipped": [],
          "duration": 936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "955783d7-cd7b-451a-9d71-b86aee97f662",
          "title": "Search By ID",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\search-by-id-test.js",
          "file": "\\api\\test\\menu-object-test\\search-by-id-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "timedOut": false,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ids = ['3', '5', '10']; \nfor (const id of ids) {\n    const response = await page.getObjectById(id);\n    assert(response.status).to.equal(200);\n    }",
              "err": {},
              "uuid": "c55bce41-05c6-44fe-ba15-e96c3003983b",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "timedOut": false,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 3;   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "bfcc0ad8-2d91-4e7a-a16c-c16d40dd9882",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "timedOut": false,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '5';   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "84174135-f548-45ed-b969-d8466659ca9f",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "timedOut": false,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '10' ;    \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "3ddabe5f-9580-4a35-af03-ba344de58d6e",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "fullTitle": "Search By ID @get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "timedOut": false,
              "duration": 165,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = true; // harusnya kena 400 tapi ini masih passing ke 200 \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(400);",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:51:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "2c636e59-c1e0-459e-8a3c-bff04633330f",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "fullTitle": "Search By ID @get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "timedOut": false,
              "duration": 148,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:57:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "1bfb5e24-c380-4fea-847d-7fb206654e04",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Search By ID @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getRequestTimeout is not a function",
                "estack": "TypeError: page.getRequestTimeout is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:61:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "c9eff7bc-e4b7-49cd-a254-3d3087f08a6e",
              "parentUUID": "955783d7-cd7b-451a-9d71-b86aee97f662",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c55bce41-05c6-44fe-ba15-e96c3003983b",
            "bfcc0ad8-2d91-4e7a-a16c-c16d40dd9882",
            "84174135-f548-45ed-b969-d8466659ca9f",
            "3ddabe5f-9580-4a35-af03-ba344de58d6e"
          ],
          "failures": [
            "2c636e59-c1e0-459e-8a3c-bff04633330f",
            "1bfb5e24-c380-4fea-847d-7fb206654e04",
            "c9eff7bc-e4b7-49cd-a254-3d3087f08a6e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "e380c190-6ff8-4b30-b2ac-a115b842a12d",
          "title": "Single Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\single-object-test.js",
          "file": "\\api\\test\\menu-object-test\\single-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getSingleObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {
                "message": "AssertionError: expected 405 to equal 200",
                "estack": "AssertionError: expected 405 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:20:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 200\n"
              },
              "uuid": "4ea1b5b6-c6f4-47aa-88d4-2cd6f9cf65e6",
              "parentUUID": "e380c190-6ff8-4b30-b2ac-a115b842a12d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 405 to equal 404",
                "estack": "AssertionError: expected 405 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:26:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 404\n"
              },
              "uuid": "daf38424-d5d6-43d5-aa08-ac2e3a077f43",
              "parentUUID": "e380c190-6ff8-4b30-b2ac-a115b842a12d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Single Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getSingleObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 405 to equal 408",
                "estack": "AssertionError: expected 405 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 408\n"
              },
              "uuid": "5026e475-7481-4e20-8664-90143a975d30",
              "parentUUID": "e380c190-6ff8-4b30-b2ac-a115b842a12d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4ea1b5b6-c6f4-47aa-88d4-2cd6f9cf65e6",
            "daf38424-d5d6-43d5-aa08-ac2e3a077f43",
            "5026e475-7481-4e20-8664-90143a975d30"
          ],
          "pending": [],
          "skipped": [],
          "duration": 573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "bedc2569-a8fe-4ee7-bb03-009fed5428f5",
          "title": "Update Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\update-object-test.js",
          "file": "\\api\\test\\menu-object-test\\update-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@put As a User, I want to be able to Update  Object - Testing with Update Object",
              "fullTitle": "Update Object @put As a User, I want to be able to Update  Object - Testing with Update Object",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16\",\n        \"data\": {\n           \"year\": 2019,\n           \"price\": 2049.99,\n           \"CPU model\": \"Intel Core i9\",\n           \"Hard disk size\": \"1 TB\",\n           \"color\": \"silver\"\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.PutObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {
                "message": "TypeError: page.PutObject is not a function",
                "estack": "TypeError: page.PutObject is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\update-object-test.js:31:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "becf15d9-0ded-487e-91dd-5ac91975cf25",
              "parentUUID": "bedc2569-a8fe-4ee7-bb03-009fed5428f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With Invalid Route",
              "fullTitle": "Update Object @get As a User, I should get error 404 when Invalid Route - Testing With Invalid Route",
              "timedOut": false,
              "duration": 199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 400 to equal 404",
                "estack": "AssertionError: expected 400 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\update-object-test.js:41:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 400\n+ 404\n"
              },
              "uuid": "aab59d4b-ba3d-4401-bfd6-cf7b9f19e5fd",
              "parentUUID": "bedc2569-a8fe-4ee7-bb03-009fed5428f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Update Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.putUpdateRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 405 to equal 408",
                "estack": "AssertionError: expected 405 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\update-object-test.js:49:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 405\n+ 408\n"
              },
              "uuid": "6d104ae8-e18f-4e16-a456-b3a270bd1a5d",
              "parentUUID": "bedc2569-a8fe-4ee7-bb03-009fed5428f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "becf15d9-0ded-487e-91dd-5ac91975cf25",
            "aab59d4b-ba3d-4401-bfd6-cf7b9f19e5fd",
            "6d104ae8-e18f-4e16-a456-b3a270bd1a5d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/",
        "reportFilename": "report-[datetime]",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}
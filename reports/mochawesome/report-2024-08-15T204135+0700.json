{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 9,
    "pending": 0,
    "failures": 7,
    "start": "2024-08-15T13:41:31.224Z",
    "end": "2024-08-15T13:41:35.304Z",
    "duration": 4080,
    "testsRegistered": 16,
    "passPercent": 56.25,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4382a5ae-e5dc-425a-895a-5d3370cc0d37",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b89443f-0db9-43ca-b8f0-d3bf5eeeb50c",
          "title": "Add Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\add-object-test.js",
          "file": "\\api\\test\\menu-object-test\\add-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "fullTitle": "Add Object @post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "timedOut": false,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16\",\n        \"data\": {\n           \"year\": 2019,\n           \"price\": 1849.99,\n           \"CPU model\": \"Intel Core i9\",\n           \"Hard disk size\": \"1 TB\"\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {},
              "uuid": "feadd1de-f35e-4735-b4b1-8928909dd3d4",
              "parentUUID": "3b89443f-0db9-43ca-b8f0-d3bf5eeeb50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "fullTitle": "Add Object @post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "timedOut": false,
              "duration": 185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"1234567\",\n        \"data\": {\n           \"year\": true,\n           \"price\": false,\n           \"CPU model\": \"!@#$%^\",\n           \"Hard disk size\": \"!@#$\",\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(400);\n}",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:53:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "1b02dcd4-65b5-4462-820d-d51311f5f49c",
              "parentUUID": "3b89443f-0db9-43ca-b8f0-d3bf5eeeb50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Add Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.postAddRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:62:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "ab5a9448-3f3c-488f-8314-33b802b9454b",
              "parentUUID": "3b89443f-0db9-43ca-b8f0-d3bf5eeeb50c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "feadd1de-f35e-4735-b4b1-8928909dd3d4"
          ],
          "failures": [
            "1b02dcd4-65b5-4462-820d-d51311f5f49c",
            "ab5a9448-3f3c-488f-8314-33b802b9454b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "8caeeb33-865d-4460-8802-abc7e0b4f77b",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\get-list-object-test.js",
          "file": "\\api\\test\\menu-object-test\\get-list-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "2de27b97-8b27-4c79-afc8-c0daf496c995",
              "parentUUID": "8caeeb33-865d-4460-8802-abc7e0b4f77b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "d5885ec0-1ce5-411e-8077-978e9e62c205",
              "parentUUID": "8caeeb33-865d-4460-8802-abc7e0b4f77b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "List All Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\get-list-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "ed4d306e-2750-4840-9687-b305cdbb2671",
              "parentUUID": "8caeeb33-865d-4460-8802-abc7e0b4f77b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2de27b97-8b27-4c79-afc8-c0daf496c995",
            "d5885ec0-1ce5-411e-8077-978e9e62c205"
          ],
          "failures": [
            "ed4d306e-2750-4840-9687-b305cdbb2671"
          ],
          "pending": [],
          "skipped": [],
          "duration": 476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
          "title": "Search By ID",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\search-by-id-test.js",
          "file": "\\api\\test\\menu-object-test\\search-by-id-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "timedOut": false,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ids = ['3', '5', '10']; \nfor (const id of ids) {\n    const response = await page.getObjectById(id);\n    assert(response.status).to.equal(200);\n    }",
              "err": {},
              "uuid": "ce540da0-6109-4e89-bf6d-4e2ebe235e99",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "timedOut": false,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 3;   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "d0572a4c-24ce-439d-b2d7-6e3b0cddb489",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '5';   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "127719ea-9532-4279-9921-409d3f9d9ca4",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '10' ;    \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "dc70f4ff-3c15-4a39-a32c-d462a42b018c",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "fullTitle": "Search By ID @get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "timedOut": false,
              "duration": 157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = true; // harusnya kena 400 tapi ini masih passing ke 200 \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(400);",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:51:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "83f9f8bc-61d9-4fcc-ad37-ac11f2b47111",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "fullTitle": "Search By ID @get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "timedOut": false,
              "duration": 361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:57:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "5280559f-065e-4cb0-b42d-16a0131bbf9b",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Search By ID @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getRequestTimeout is not a function",
                "estack": "TypeError: page.getRequestTimeout is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:61:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "721ad4f2-1770-4ba0-a72f-006586c9f377",
              "parentUUID": "5a71b50d-5e5f-4b86-abfd-1620e2d1e524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce540da0-6109-4e89-bf6d-4e2ebe235e99",
            "d0572a4c-24ce-439d-b2d7-6e3b0cddb489",
            "127719ea-9532-4279-9921-409d3f9d9ca4",
            "dc70f4ff-3c15-4a39-a32c-d462a42b018c"
          ],
          "failures": [
            "83f9f8bc-61d9-4fcc-ad37-ac11f2b47111",
            "5280559f-065e-4cb0-b42d-16a0131bbf9b",
            "721ad4f2-1770-4ba0-a72f-006586c9f377"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "f9cdabfc-5475-4318-9fba-7274bf07c132",
          "title": "Single Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\single-object-test.js",
          "file": "\\api\\test\\menu-object-test\\single-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getSingleObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "b5bbec3d-1d31-48ca-ae66-6e7b3c79fcd0",
              "parentUUID": "f9cdabfc-5475-4318-9fba-7274bf07c132",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "1145a4fe-67e5-4782-b33e-165a95f05088",
              "parentUUID": "f9cdabfc-5475-4318-9fba-7274bf07c132",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Single Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 145,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getSingleObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "dfbd0b30-0902-4e45-b875-986a10aae612",
              "parentUUID": "f9cdabfc-5475-4318-9fba-7274bf07c132",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5bbec3d-1d31-48ca-ae66-6e7b3c79fcd0",
            "1145a4fe-67e5-4782-b33e-165a95f05088"
          ],
          "failures": [
            "dfbd0b30-0902-4e45-b875-986a10aae612"
          ],
          "pending": [],
          "skipped": [],
          "duration": 889,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/",
        "reportFilename": "report-[datetime]",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}
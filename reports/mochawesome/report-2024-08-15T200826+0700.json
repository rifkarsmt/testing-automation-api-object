{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 3,
    "pending": 0,
    "failures": 7,
    "start": "2024-08-15T13:08:23.856Z",
    "end": "2024-08-15T13:08:26.182Z",
    "duration": 2326,
    "testsRegistered": 10,
    "passPercent": 30,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "30ab0be0-2472-436c-b879-a8ab9d8e5a2f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d92bcf3-606f-4ff7-83a1-212b0292d597",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\get-list-object-test.js",
          "file": "\\api\\test\\menu-object-test\\get-list-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "1ea3dba8-d1f0-402b-b0c6-cdb76705d01f",
              "parentUUID": "7d92bcf3-606f-4ff7-83a1-212b0292d597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "7101c2f1-273d-4b4d-abce-c40f0e945d2f",
              "parentUUID": "7d92bcf3-606f-4ff7-83a1-212b0292d597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "List All Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\get-list-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "db716ddc-4ae6-4333-b604-16b20233652a",
              "parentUUID": "7d92bcf3-606f-4ff7-83a1-212b0292d597",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ea3dba8-d1f0-402b-b0c6-cdb76705d01f",
            "7101c2f1-273d-4b4d-abce-c40f0e945d2f"
          ],
          "failures": [
            "db716ddc-4ae6-4333-b604-16b20233652a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 982,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
          "title": "Search By ID",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\search-by-id-test.js",
          "file": "\\api\\test\\menu-object-test\\search-by-id-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "timedOut": false,
              "duration": 220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const ids = ['3', '5', '10']; \nfor (const id of ids) {\n    const response = await page.getObjectById(id);\n    assert(response.status).to.equal(200);\n    }",
              "err": {
                "message": "AssertionError: expected 404 to equal 200",
                "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:22:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 200\n"
              },
              "uuid": "089bc988-9126-4e2a-96ca-0168e062eff7",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "timedOut": false,
              "duration": 152,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = 3;   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {
                "message": "AssertionError: expected 404 to equal 200",
                "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:30:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 200\n"
              },
              "uuid": "da822c1b-95b7-4b86-8608-24075b5adadd",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "timedOut": false,
              "duration": 223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = '5';   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {
                "message": "AssertionError: expected 404 to equal 200",
                "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:37:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 200\n"
              },
              "uuid": "e77e93ca-344d-4e18-aaef-a1becb3355de",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "timedOut": false,
              "duration": 375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = '10' ;    \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {
                "message": "AssertionError: expected 404 to equal 200",
                "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:44:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 200\n"
              },
              "uuid": "bb8761b1-b549-43d8-bdf6-2b4b011bf65b",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "fullTitle": "Search By ID @get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "timedOut": false,
              "duration": 164,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = true; // harusnya kena 400 tapi ini masih passing ke 200 \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(400);",
              "err": {
                "message": "AssertionError: expected 404 to equal 400",
                "estack": "AssertionError: expected 404 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:51:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 400\n"
              },
              "uuid": "4d4145d1-2e5b-47e7-a2a9-b03db2ddb28a",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "fullTitle": "Search By ID @get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "timedOut": false,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "20517251-3906-4545-bb68-90a7bd294028",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Search By ID @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getRequestTimeout is not a function",
                "estack": "TypeError: page.getRequestTimeout is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:61:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "7e916944-3408-458c-9b8b-7a7e84c55fd6",
              "parentUUID": "dc34f5ae-5d7b-4f5e-b9e3-9744d638e911",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20517251-3906-4545-bb68-90a7bd294028"
          ],
          "failures": [
            "089bc988-9126-4e2a-96ca-0168e062eff7",
            "da822c1b-95b7-4b86-8608-24075b5adadd",
            "e77e93ca-344d-4e18-aaef-a1becb3355de",
            "bb8761b1-b549-43d8-bdf6-2b4b011bf65b",
            "4d4145d1-2e5b-47e7-a2a9-b03db2ddb28a",
            "7e916944-3408-458c-9b8b-7a7e84c55fd6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1306,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/",
        "reportFilename": "report-[datetime]",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}
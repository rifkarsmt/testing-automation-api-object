{
  "stats": {
    "suites": 3,
    "tests": 11,
    "passes": 7,
    "pending": 0,
    "failures": 4,
    "start": "2024-08-15T13:31:45.143Z",
    "end": "2024-08-15T13:31:47.705Z",
    "duration": 2562,
    "testsRegistered": 11,
    "passPercent": 63.63636363636363,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0e9b446d-0d3e-4292-8547-c958dedbb6b1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f5c00ed-e5f0-445b-b092-2c4fe2868ddf",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\add-object-test.js",
          "file": "\\api\\test\\menu-object-test\\add-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "fullTitle": "List All Of Object @post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "timedOut": false,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16\",\n        \"data\": {\n           \"year\": 2019,\n           \"price\": 1849.99,\n           \"CPU model\": \"Intel Core i9\",\n           \"Hard disk size\": \"1 TB\"\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {},
              "uuid": "3eddbe59-0838-4543-8f6d-64e232e8105f",
              "parentUUID": "6f5c00ed-e5f0-445b-b092-2c4fe2868ddf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3eddbe59-0838-4543-8f6d-64e232e8105f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 410,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "874cbde2-e157-42b9-aac3-72a1784f3310",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\get-list-object-test.js",
          "file": "\\api\\test\\menu-object-test\\get-list-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "0ef393b1-a2c1-4c86-84d5-b679f1d13a27",
              "parentUUID": "874cbde2-e157-42b9-aac3-72a1784f3310",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "3e6da811-287c-4e83-aaf0-18c1229a41f8",
              "parentUUID": "874cbde2-e157-42b9-aac3-72a1784f3310",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "List All Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\get-list-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "f3db5e06-30cb-4f40-9399-82e3081c030e",
              "parentUUID": "874cbde2-e157-42b9-aac3-72a1784f3310",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ef393b1-a2c1-4c86-84d5-b679f1d13a27",
            "3e6da811-287c-4e83-aaf0-18c1229a41f8"
          ],
          "failures": [
            "f3db5e06-30cb-4f40-9399-82e3081c030e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 556,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "69babca5-732e-4263-8864-e8bb7678d24a",
          "title": "Search By ID",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\search-by-id-test.js",
          "file": "\\api\\test\\menu-object-test\\search-by-id-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "timedOut": false,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ids = ['3', '5', '10']; \nfor (const id of ids) {\n    const response = await page.getObjectById(id);\n    assert(response.status).to.equal(200);\n    }",
              "err": {},
              "uuid": "42f7f899-5409-4d62-b15f-0282526d1d57",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "timedOut": false,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 3;   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "0dc82793-40e7-4c0a-99f0-f5287b40f905",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "timedOut": false,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '5';   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "406fd7f0-67fb-42d9-b1b6-9890edf5bce2",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "timedOut": false,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '10' ;    \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "fe61ccc1-59fc-43cb-ae19-8c2cd78c3052",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "fullTitle": "Search By ID @get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "timedOut": false,
              "duration": 209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = true; // harusnya kena 400 tapi ini masih passing ke 200 \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(400);",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:51:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "5d0f344d-b5d8-4a2e-8bac-b1754b55ad13",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "fullTitle": "Search By ID @get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "timedOut": false,
              "duration": 239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:57:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "65831d71-46f9-4b14-b393-c5a55ad1d9d1",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Search By ID @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getRequestTimeout is not a function",
                "estack": "TypeError: page.getRequestTimeout is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:61:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "05a8e928-497f-4324-b427-c8d652d37679",
              "parentUUID": "69babca5-732e-4263-8864-e8bb7678d24a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42f7f899-5409-4d62-b15f-0282526d1d57",
            "0dc82793-40e7-4c0a-99f0-f5287b40f905",
            "406fd7f0-67fb-42d9-b1b6-9890edf5bce2",
            "fe61ccc1-59fc-43cb-ae19-8c2cd78c3052"
          ],
          "failures": [
            "5d0f344d-b5d8-4a2e-8bac-b1754b55ad13",
            "65831d71-46f9-4b14-b393-c5a55ad1d9d1",
            "05a8e928-497f-4324-b427-c8d652d37679"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1541,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/",
        "reportFilename": "report-[datetime]",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}
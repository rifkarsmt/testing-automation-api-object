{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 8,
    "pending": 0,
    "failures": 8,
    "start": "2024-08-15T13:40:44.860Z",
    "end": "2024-08-15T13:40:48.682Z",
    "duration": 3822,
    "testsRegistered": 16,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7751390-73a2-41c9-abca-10774c57f6b4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d278670c-87c0-4389-9555-74befc4fe229",
          "title": "Add Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\add-object-test.js",
          "file": "\\api\\test\\menu-object-test\\add-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "fullTitle": "Add Object @post As a User, I want to be able to Add Object - Testing with Add Data Object",
              "timedOut": false,
              "duration": 683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"Apple MacBook Pro 16\",\n        \"data\": {\n           \"year\": 2019,\n           \"price\": 1849.99,\n           \"CPU model\": \"Intel Core i9\",\n           \"Hard disk size\": \"1 TB\"\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(200);\n}",
              "err": {},
              "uuid": "81cadf15-e80a-41ed-9211-8009167962a6",
              "parentUUID": "d278670c-87c0-4389-9555-74befc4fe229",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "fullTitle": "Add Object @post As a User, I should get error 400 when Bad Request Response - Testing with Invalid Data Object",
              "timedOut": false,
              "duration": 172,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const validDataCases = [\n    {\n        \"name\": \"1234567\",\n        \"data\": {\n           \"year\": true,\n           \"price\": false,\n           \"CPU model\": \"!@#$%^\",\n           \"Hard disk size\": \"!@#$\",\n        }\n     }\n];\nfor (const data of validDataCases){\nconst response = await page.postAddObject(data);\nconsole.log(`Testing with data:`, data);\nconsole.log(response.body);\nassert(response.status).to.equal(400);\n}",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:53:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "270e4a04-ef01-4d68-8483-a349f6689114",
              "parentUUID": "d278670c-87c0-4389-9555-74befc4fe229",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Add Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 228,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.postAddRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\add-object-test.js:62:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "8f666877-d3cc-4232-9ff3-e068602318d9",
              "parentUUID": "d278670c-87c0-4389-9555-74befc4fe229",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81cadf15-e80a-41ed-9211-8009167962a6"
          ],
          "failures": [
            "270e4a04-ef01-4d68-8483-a349f6689114",
            "8f666877-d3cc-4232-9ff3-e068602318d9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "f24f678c-082e-4fe9-87bb-3936442a0842",
          "title": "List All Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\get-list-object-test.js",
          "file": "\\api\\test\\menu-object-test\\get-list-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {},
              "uuid": "607a6c01-7506-4d24-b0c1-17c60ec4baa3",
              "parentUUID": "f24f678c-082e-4fe9-87bb-3936442a0842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "List All Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "06903905-ef50-423c-8668-12b57330bc55",
              "parentUUID": "f24f678c-082e-4fe9-87bb-3936442a0842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "List All Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "AssertionError: expected 200 to equal 408",
                "estack": "AssertionError: expected 200 to equal 408\n    at Context.<anonymous> (api\\test\\menu-object-test\\get-list-object-test.js:34:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 408\n"
              },
              "uuid": "27eedea2-2378-4d55-8f8f-8b7d8a312ca9",
              "parentUUID": "f24f678c-082e-4fe9-87bb-3936442a0842",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "607a6c01-7506-4d24-b0c1-17c60ec4baa3",
            "06903905-ef50-423c-8668-12b57330bc55"
          ],
          "failures": [
            "27eedea2-2378-4d55-8f8f-8b7d8a312ca9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
          "title": "Search By ID",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\search-by-id-test.js",
          "file": "\\api\\test\\menu-object-test\\search-by-id-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing with multiple data IDs",
              "timedOut": false,
              "duration": 750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ids = ['3', '5', '10']; \nfor (const id of ids) {\n    const response = await page.getObjectById(id);\n    assert(response.status).to.equal(200);\n    }",
              "err": {},
              "uuid": "fc0c0cd3-b096-4889-8d48-509c90566eca",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 3",
              "timedOut": false,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 3;   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "44b6d5cb-b81e-49d6-8cc4-93a93f074c46",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 5",
              "timedOut": false,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '5';   \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "23e3130b-5529-4b7f-8271-617b21e4dbc7",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "fullTitle": "Search By ID @get As a User, I want to be able to get List Of All Object - Testing With ID = 10",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = '10' ;    \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(200);",
              "err": {},
              "uuid": "e3752c47-e712-462e-b9d4-e16039756878",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "fullTitle": "Search By ID @get As a User, I should get error 400 when Invalid Data Parameter - Testing With ID using boolean",
              "timedOut": false,
              "duration": 157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const id = true; // harusnya kena 400 tapi ini masih passing ke 200 \nconst response = await page.getObjectById(id);\nconsole.log(response.body);\nassert(response.status).to.equal(400);",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:51:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "e8239a83-1324-4671-b836-bbec6ad99388",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "fullTitle": "Search By ID @get As a User, I should get error 404 when Invalid Route - Testing with Invalid Route",
              "timedOut": false,
              "duration": 318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:57:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "78f5eddc-9f00-42be-bac2-d5cad946aa26",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Search By ID @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getRequestTimeout({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getRequestTimeout is not a function",
                "estack": "TypeError: page.getRequestTimeout is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\search-by-id-test.js:61:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "62900687-9cd6-49e7-95ea-8a00d52e8813",
              "parentUUID": "88ed9e7e-cf87-4728-9b8c-ca6ddf2f5952",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc0c0cd3-b096-4889-8d48-509c90566eca",
            "44b6d5cb-b81e-49d6-8cc4-93a93f074c46",
            "23e3130b-5529-4b7f-8271-617b21e4dbc7",
            "e3752c47-e712-462e-b9d4-e16039756878"
          ],
          "failures": [
            "e8239a83-1324-4671-b836-bbec6ad99388",
            "78f5eddc-9f00-42be-bac2-d5cad946aa26",
            "62900687-9cd6-49e7-95ea-8a00d52e8813"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "993e3967-e0ba-4ca8-9517-4adc8603fd1a",
          "title": "Single Of Object",
          "fullFile": "D:\\PARI\\testing-automation-api-object\\api\\test\\menu-object-test\\single-object-test.js",
          "file": "\\api\\test\\menu-object-test\\single-object-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I want to be able to get List Of All Object - Testing With True endpoint",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject();\n    console.log(response.body);\n    assert(response.status).to.equal(200);",
              "err": {
                "message": "TypeError: page.getListAllObject is not a function",
                "estack": "TypeError: page.getListAllObject is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:18:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "1a529bb2-7180-4952-8695-777eb51da81a",
              "parentUUID": "993e3967-e0ba-4ca8-9517-4adc8603fd1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "fullTitle": "Single Of Object @get As a User, I should get error 404 when Invalid Route - Testing With True endpoint",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.getnotFound();\n    console.log(response.body);\n    assert(response.status).to.equal(404);",
              "err": {},
              "uuid": "ebf9aaa9-bc9f-4abc-bc89-cf5dda872917",
              "parentUUID": "993e3967-e0ba-4ca8-9517-4adc8603fd1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "fullTitle": "Single Of Object @get As a User, I should get error 408 when the request times out - Testing Request Timeout",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await page.getListAllObject({\n    timeout: 100 // Simulate a request timeout\n});\nconsole.log(response.body);\nassert(response.status).to.equal(408);",
              "err": {
                "message": "TypeError: page.getListAllObject is not a function",
                "estack": "TypeError: page.getListAllObject is not a function\n    at Context.<anonymous> (api\\test\\menu-object-test\\single-object-test.js:30:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "32b72ead-bbd7-4816-9cb0-9dc8c341aaa5",
              "parentUUID": "993e3967-e0ba-4ca8-9517-4adc8603fd1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebf9aaa9-bc9f-4abc-bc89-cf5dda872917"
          ],
          "failures": [
            "1a529bb2-7180-4952-8695-777eb51da81a",
            "32b72ead-bbd7-4816-9cb0-9dc8c341aaa5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/",
        "reportFilename": "report-[datetime]",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}